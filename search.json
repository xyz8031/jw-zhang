[{"title":"開始經營部落格","url":"/2021/02/03/why-blog/","content":"部落格？現在還有人在經營部落格嗎？一起來看看我創部落格的原因吧以及未來的經營方向吧！\n\n\n\n為什麼要創部落格念頭現在網路這麼方便，大家平常碰到不懂的問題或是想瞭解的東西，通常第一件事就是打開搜尋引擎、輸入關鍵字、按下搜尋，成千上萬的網站在不到一秒鐘的時間就呈現在你眼前。而要在這些網站中找到真的有知識跟內容的網站可以說是大海撈針啊，而如果偶然找到一個很有深度的部落格都會讓我開心半天。\n我們平常大多都是資訊的受眾，很少有機會在網路上和別人分享自身的經驗或知識，而部落格就是一個發表個人意見的好地方。我自己在大學時就一直有想要經營部落格的念頭，只不過覺得自己沒有什麼適合和別人分享的，再加上學生時期都在耍廢比較忙碌，所以一直沒有下文。\n重重阻礙不用說大家也知道，經營部落格是一件相當辛苦的事情，不但要投入金錢架設網站、還要固定撥出時間撰寫部落格文章。 以一般朝九晚五的上班族來說，晚上下班後通勤加上吃飯的時間少說1~2個小時以上，再扣掉洗澡和稍作休息的時間共1小時，到12點睡覺前就只剩下4小時了，更不用說大家生活中都還有各自的事情要處理了。\n雖然很多人會認為經營部落格就像看書一樣，想看的時候再翻開書、有想法的時候再開始敲鍵盤寫文章就好了。但我是一個看重結果大於過程的人，一旦我決定投入某件事，我勢必要有一些成果才不會浪費時間、更不會辜負當初自己的初衷。我認爲過程大於結果是在你努力過後卻發現無法達成目標時告訴自己的話，而不是那個讓還沒開始的你可以有退路的一個理由。\n下定決心畢業開始工作一段時間之後，我慢慢認知到Personal Branding及Portfolio的重要。我自己大學時雖然是商學院的，但後來發現自己對資料科學這塊的興趣，變慢慢在網路上自學相關的知識和技術，直到畢業後到現在擔任資料分析師一職。\n對於資料科學這個相對新興的職位來說，當每個人的Resume上都寫著擅長R、Python和熟悉機器學習、深度學習模型及套件這種模稜兩可的文字時，面試官很難真的知道應徵者的能力，這時候一個完整的Portfolio就是使你脫穎而出的關鍵了。特別對於沒有工作經驗的學生或是想轉換跑道做資料科學的各領域人士來說，個人作品集是最能展現你的價值的地方。\n除了Portfolio之外，個人品牌是另一個讓我決定要創部落格的原因。身為資料科學的一份子，我自己時常在網路上搜尋相關的內容或知識，有些部落格真的讓我受益良多，像是：\n\nLee Meng\nDavid’s Perspective\n東京疊塔\n\n看到這些厲害的大神們分享，我都暗自期許自己有一天能像他們一樣寫出令人受益良多的內容，可惜總覺得自己技不如人，寫不出什麼具有深度的內容。然而最近讀了一本關於資料科學職涯規劃的書：Build a Career in Data Science，裡面提到一句蠻啟發我的話。\n\nYou are best positioned to teach the people a few steps behind you. Right after you’ve learned a concept, such as continuous integration for your package or making a TensorFlow model, you will understand the misconceptions and frustrations you’ve had.\n\n就像英文的母語人士可能很難瞭解一般台灣人學習英文過程中遇到的問題，但是如果你是土生土長的台灣人就會知道這是因為學校教學方式和升學制度上的問題。\n其實對於資料科學有興趣卻不得其門而入的人來說，有時那些資深的業界人士所說的各種專業術語反而令人更加困惑，而像我一樣自學的人可能更容易抓到問題點，畢竟我們自己也是這樣走過來的。\n這本書的內容還蠻適合想要從事資料科學相關行業的人閱讀的，日後有機會再寫一篇文章和大家分享書裡的內容和我的自身經驗及看法。\n未來經營方向\n如同前面所提到的，這個部落格是為了Personal Branding和Portfolio所建立的，所以大部分的文章主題都會和Data Science脫不了關係，目前規劃會以下面幾種類型的文章為主。\n資料分析\n當初讓我踏進資料科學這個領域的就是資料分析了，如何從一個原始未經處理的雜亂資料，經過清洗、轉換、視覺化、分析導出一個結論或是發現許多有趣的洞見絕對是一項令人非常興奮的事。\n為了讓更多人瞭解資料分析的過程和方法，以及加強我自己的實力，我會從下列一些資料平台蒐集特別的或是我有興趣的資料集，並實作End-to-End的專案，完整的從頭到尾走過一遍。\n\nMakeOver Monday\nTidy Tuesday\nData Gov\nKaggle\n政府開放資料\n\n資料視覺化\n作為資料科學中門檻相對較低的一個學問，也是我當初最著迷的一個部分，到現在我都還記得第一次用R的ggplot2套件畫出Diamonds Dataset的圖呢！雖然資料視覺化相對容易，不需要高深的數學知識或是艱澀難懂的程式語言，但其實資料視覺化中其實也蘊含了許多小細節。\n我自己是比較熟悉ggplot2套件，因此之後也會依這個套件為主教大家一些常見的圖表做法，像是：\n\n柱狀圖 Bar Chart\n折線圖 Line Plot\n熱度圖 Heatmap\n散佈圖 Scatter Plot\n\n\n除了最基本的如何畫圖之外，我也會講解一些改善你的視覺化圖表的技巧，相信這是對大部分人都會很有幫助的內容。畢竟就算你不是從事資料科學的工作，日常工作或是課業中或多或少需要做簡報和報告，當中勢必少不了使用圖表呈現資料以佐證你的觀點，這時候一個好的圖表可是相當至關重要的啊。\n機器學習\n資料科學這個領域裡面最吸引人的或許就是機器學習了，想必許多人是因為機器學習才因緣際會踏入資料科學的領域。雖然我不是資工或數學相關背景出身的，因此對於演算法相對沒那麼熟悉，無法帶著大家理解各式各樣艱深複雜的模型。\n不過我會著重在機器學習的實作上，以及各種模型的特性及優缺點。此外，我還會提到一些實作中常會遇到的問題或是謬誤，讓非相關背景的人也能快速動手完成一個機器學習的Toy Example。\n程式語言\n講到資料科學，就不能不提到R和Python這兩個程式語言，如果你不會兩者之中的其中一個的話，我覺得要做資料分析相關的工作或許會有點困難。我自己是比較擅長R，所以主要會介紹R跟其他資料科學常用的套件，像是：\n\ndplyr\nggplot2\ntidyr\nshiny\nplotly\n\n而我雖然也有學過Python，不過用來用去還是覺得R比較好用。像我之前有一陣子為了讓自己更熟悉Python，那段時間都強迫自己用Python寫程式，結果最後還是默默打開RStudio…\n不過由於現在工作的關係，比以前更常需要建一些機器學習的模型，這時侯Python的優勢就出來了，不得不說scikit-learn這個套件的強大，讓R在機器學習建模這塊落後Python一截。關於R跟Python之間的差異和優缺點，之後在寫篇文章詳細說明。\n自學心得如同我前面提到的，我大部分資料分析的能力都是自學而來的，前前後後看的線上課程跟書籍也不下數十個，當中有許多都是讓我受益良多的超讚資源，不過其中當然不乏一些濫竽充數的內容…\n希望透過自身經驗的分享，能讓想踏上自學資料科學這條路的人少走許多冤枉路，或是浪費金錢購買不必要的課程，印象中我自己這幾年下來好像沒有花過任何一毛錢在任何課程上，現在網路真的很方便，如果沒有好好利用真的很可惜～\n結語和展望終於發出了我這輩子以來的第一個部落個文章了！其實我蠻早就在本機架設好網站了，只是一直沒有部署到GitHub而已，因為我總覺得在正式部署之前要先有個兩三篇文章，否則架好的網站空空如也好像也沒什麼意義。\n結果我一拖再拖，幾個星期後一篇文章都沒寫出來，後來終於破釜沈舟決定直接部署網站，藉由這樣來逼自己趕進度。只能說寫作這種事情果然是需要練習的，這篇文章從無到有也花了我好幾個小時，希望自己未來能達成以下的目標：\n\n精進自己的寫作能力，能夠寫出更好的內容\n持之以恆的寫作，累積一定數量的文章\n\n至於觀看人數什麼的倒是其次了，畢竟如果一開始就這麼在意這些數字，我想會對自己造成太多心理上的壓力。而且如果真的想要關注度的話，我想我會選擇使用Instagram或Facebook這些社群平台，而不是自己寫一個部落格。\n最後，如果大家有什麼問題或想瞭解的內容，歡迎大家在下方留言或是透過email和我聯絡喔，也感謝大家的收看！\n"},{"title":"一窺大麥克指數：二十年物價變化","url":"/2021/05/03/big-mac-index/","content":"你覺得在台灣吃大麥克便宜嗎？那在其他國家大麥克又是便宜還是貴呢？\n\n\n\n前言導論資料來源今天要和大家分享的是Tidytuesday在2020年的最後一週的星期二：12月22號發佈的大麥克指數（Big Mac Index）資料集 。Tidytuesday是個每週二都會分享一個資料的專案，從2018年4月至今已經累積了150個資料集，其中不乏許多有趣的資料，如果平常想要練習自己資料分析的能力，卻不知道要去哪裡找資料的話，Tidytuesday是個不錯的地方。\n大麥克指數\n大家應該都聽過大麥克指數，這是個由英國經濟學人雜誌（The Economist）在1986年發明，用來估計購買力平價（Purchasing Power Parity）的指數。所謂的購買力平價指的是在不同國家購買相同商品時的相對價格，即貨幣的相對購買力。這裡所謂的相同商品不一定是指完全一樣的商品，由於國家間的差異商品籃（Baskets of Goods and Services）裡的東西也會略有不同。而大麥克指數就是透過比較不同地區之間的大麥克售價和貨幣匯率，來判斷貨幣是否被高估或地估。\n\n不過今天的重點不是放在大麥克指數或是經濟層面，而是著重在這個資料集上，看看我們能不能從這個資料集發現什麼有趣或是意想不到的東西。對於大麥克指數有興趣的人，也可以去The Economist的網站看看他們的分析和介紹、以及精美的互動式視覺化圖表。\n前置作業載入套件library(dplyr) # manipulate datalibrary(tidyr) # reshape datalibrary(ggplot2) # create data visualizationlibrary(lubridate) # deal with date-time objectslibrary(countrycode) # convert country names and codes\n關於各個套件的詳細介紹在這邊就不一一贅述了，如果想更進一步瞭解每個套件的功能和語法，建議點選以下網址前往CRAN（The Comprehensive R Archive Network）查看Manual或Vignette。\n\ndplyr\ntidyr\nggplot2\nlubridate\ncountrycode\nvisdat\nskimr\n\n讀取資料在Tidytuesday的Readme檔案裡介紹了兩種下載資料的方式，一是直接透過套件裡的Function下載。\n# Either ISO-8601 date or year/week works!tuesdata &lt;- tidytuesdayR::tt_load(&#x27;2020-12-22&#x27;)tuesdata &lt;- tidytuesdayR::tt_load(2020, week = 52)data &lt;- tuesdata$big-mac\n或是直接從GitHub的網址讀取檔案。\n# Or read in the data manuallydata &lt;- readr::read_csv(&#x27;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-22/big-mac.csv&#x27;)\n兩種方法都可以，就看個人喜好囉。我自己是偏好第二種方法，這樣如果在不同環境執行的時候還是能直接讀取檔案，不需要再安裝套件，當然最保險的做法還是將檔案下載到本機，自己電腦裡也保存一份。\n資料的架構呈現如下：\n&gt; str(data)tibble [1,386 × 19] (S3: spec_tbl_df/tbl_df/tbl/data.frame) $ date         : Date[1:1386], format: &quot;2000-04-01&quot; &quot;2000-04-01&quot; &quot;2000-04-01&quot; ... $ iso_a3       : chr [1:1386] &quot;ARG&quot; &quot;AUS&quot; &quot;BRA&quot; &quot;CAN&quot; ... $ currency_code: chr [1:1386] &quot;ARS&quot; &quot;AUD&quot; &quot;BRL&quot; &quot;CAD&quot; ... $ name         : chr [1:1386] &quot;Argentina&quot; &quot;Australia&quot; &quot;Brazil&quot; &quot;Canada&quot; ... $ local_price  : num [1:1386] 2.5 2.59 2.95 2.85 5.9 ... $ dollar_ex    : num [1:1386] 1 1.68 1.79 1.47 1.7 ... $ dollar_price : num [1:1386] 2.5 1.54 1.65 1.94 3.47 ... $ usd_raw      : num [1:1386] -0.00398 -0.38579 -0.34341 -0.22758 0.3827 ... $ eur_raw      : num [1:1386] 0.0501 -0.3525 -0.3078 -0.1857 0.4577 ... $ gbp_raw      : num [1:1386] -0.167 -0.486 -0.451 -0.354 0.156 ... $ jpy_raw      : num [1:1386] -0.0986 -0.4442 -0.4058 -0.301 0.2513 ... $ cny_raw      : num [1:1386] 1.091 0.289 0.378 0.622 1.903 ... $ gdp_dollar   : num [1:1386] NA NA NA NA NA NA NA NA NA NA ... $ adj_price    : num [1:1386] NA NA NA NA NA NA NA NA NA NA ... $ usd_adjusted : num [1:1386] NA NA NA NA NA NA NA NA NA NA ... $ eur_adjusted : num [1:1386] NA NA NA NA NA NA NA NA NA NA ... $ gbp_adjusted : num [1:1386] NA NA NA NA NA NA NA NA NA NA ... $ jpy_adjusted : num [1:1386] NA NA NA NA NA NA NA NA NA NA ... $ cny_adjusted : num [1:1386] NA NA NA NA NA NA NA NA NA NA ...\n下載完的資料總共有19個欄位，不過這次的分析只會使用以下幾個欄位\n\ndate 日期\niso_a3 國家代號\nname 國家名稱\ndollar_price 大麥克價格（美金）\nlocal_price 大麥克價格（當地貨幣）\ngdp_dollar 人均國內生產毛額（美金）\n\n前5筆的資料呈現如下：\n\n\n\ndate\nname\niso_a3\ndollar_price\nlocal_price\ngdp_dollar\n\n\n\n2000-04-01\nArgentina\nARG\n2.500000\n2.50\nNA\n\n\n2000-04-01\nAustralia\nAUS\n1.541667\n2.59\nNA\n\n\n2000-04-01\nBrazil\nBRA\n1.648045\n2.95\nNA\n\n\n2000-04-01\nCanada\nCAN\n1.938775\n2.85\nNA\n\n\n2000-04-01\nSwitzerland\nCHE\n3.470588\n5.90\nNA\n\n\n\n\n另外順便跟大家介紹一個好用的套件，skimr裡有個skim的function，能夠快速瀏覽整個資料的概況，包括\n\n資料筆數\n欄位數量\n欄位類別\n\n這個資料集包含了1386筆資料，總共有7個欄位，其中4個是文字類型的、2個是數值類型的、剩下1個則是日期類型的欄位。這個Function還會針對不同資料類型的欄位給予適合的統計量，像文字欄位就計算了最短和最長的字串長度，以及一共有幾個Unique的值。\n數值欄位則計算了平均數、標準差、四分位數等常見的統計量，不過我覺得最特別的是還有個迷你hitogram可以讓你快速檢視資料的分佈情形，真的超級方便的～\n── Data Summary ────────────────────────                           ValuesName                       data  Number of rows             1386  Number of columns          6     _______________________          Column type frequency:             character                2       Date                     1       numeric                  3     ________________________         Group variables            None  ── Variable type: character ──────────────────────────────────────────────────────────────────────────────────  skim_variable n_missing complete_rate   min   max empty n_unique whitespace1 name                  0             1     3    20     0       57          02 iso_a3                0             1     3     3     0       56          0── Variable type: Date ───────────────────────────────────────────────────────────────────────────────────────  skim_variable n_missing complete_rate min        max        median     n_unique1 date                  0             1 2000-04-01 2020-07-01 2013-07-01       33── Variable type: numeric ────────────────────────────────────────────────────────────────────────────────────  skim_variable n_missing complete_rate     mean        sd       p0     p25      p50      p75       p100 hist1 dollar_price          0         1         3.26      1.26    0.640    2.34     3.04     4.01       8.31 ▃▇▃▁▁2 local_price           0         1     10043.   181451.      1.05     7.25    24.2    119    4000000    ▇▁▁▁▁3 gdp_dollar          684         0.506 25983.    22812.   1050.    7990.   15214.   42221.    100579.   ▇▂▃▁▁\n可以看到在這個資料中，name欄位總共有57個unique的值，而iso_a3卻只有56個，代表有一個國家卻有兩個名字的情況。而同時我們也發現gdp欄位資料完整率（complete_rate）只有50.6％，等等或許可以特別檢查一下。\n資料清理國家名稱 [1] &quot;Argentina&quot;            &quot;Australia&quot;            &quot;Brazil&quot;               &quot;Canada&quot;               &quot;Switzerland&quot;          [6] &quot;Chile&quot;                &quot;China&quot;                &quot;Czech Republic&quot;       &quot;Denmark&quot;              &quot;Euro area&quot;           [11] &quot;Britain&quot;              &quot;Hong Kong&quot;            &quot;Hungary&quot;              &quot;Indonesia&quot;            &quot;Israel&quot;              [16] &quot;Japan&quot;                &quot;South Korea&quot;          &quot;Mexico&quot;               &quot;Malaysia&quot;             &quot;New Zealand&quot;         [21] &quot;Poland&quot;               &quot;Russia&quot;               &quot;Singapore&quot;            &quot;Sweden&quot;               &quot;Thailand&quot;            [26] &quot;Taiwan&quot;               &quot;United States&quot;        &quot;South Africa&quot;         &quot;Philippines&quot;          &quot;Norway&quot;              [31] &quot;Peru&quot;                 &quot;Turkey&quot;               &quot;Egypt&quot;                &quot;Colombia&quot;             &quot;Costa Rica&quot;          [36] &quot;Sri Lanka&quot;            &quot;Pakistan&quot;             &quot;Saudi Arabia&quot;         &quot;Ukraine&quot;              &quot;Uruguay&quot;             [41] &quot;UAE&quot;                  &quot;India&quot;                &quot;Vietnam&quot;              &quot;United Arab Emirates&quot; &quot;Azerbaijan&quot;          [46] &quot;Bahrain&quot;              &quot;Guatemala&quot;            &quot;Honduras&quot;             &quot;Croatia&quot;              &quot;Jordan&quot;              [51] &quot;Kuwait&quot;               &quot;Lebanon&quot;              &quot;Moldova&quot;              &quot;Nicaragua&quot;            &quot;Oman&quot;                [56] &quot;Qatar&quot;                &quot;Romania&quot;\n國家名稱的欄位大致上看起來沒問題，沒有什麼雜亂或是格式不一致的問題。但是如果你夠仔細的話（或是對我們剛剛提到的事還有印象），就會發現有個國家的名字重複了，阿拉伯聯合大公國在這裡用了兩種名字\n\nUnited Arab Emirates\nUAE\n\n這種情況在現實中還蠻常發生的，像是在填寫紐約這個城市的名稱時候可能就會有New York、NY、NYC等幾種不同的寫法，這種時候就要多檢視你的資料，手動調整這些值。不過好險今天我們不用那麼麻煩一個一個去對照，如同上面看到的，資料裡還有一個欄位iso_a3，這個欄位代表的是ISO 3166-1的國家代碼，透過比較兩著的數量就可以知道是不是有一個國家有不同的名字的情況發生了。\n&gt; length(unique(data$name))[1] 57&gt; length(unique(data$iso_a3))[1] 56\n看來除了阿聯之外，其他國家都沒有這樣的問題。不過為了保險起見，我們還是使用countrycode套件裡的function，將國家名稱統一換為最正確的名稱。\n&gt; countrycode(data$iso_a3, origin = &quot;iso3c&quot;, destination = &quot;cldr.short.en&quot;) %&gt;% unique() [1] &quot;Argentina&quot;            &quot;Australia&quot;            &quot;Brazil&quot;               &quot;Canada&quot;               &quot;Switzerland&quot;          [6] &quot;Chile&quot;                &quot;China&quot;                &quot;Czechia&quot;              &quot;Denmark&quot;              &quot;UK&quot;                  [11] &quot;Hong Kong&quot;            &quot;Hungary&quot;              &quot;Indonesia&quot;            &quot;Israel&quot;               &quot;Japan&quot;               [16] &quot;South Korea&quot;          &quot;Mexico&quot;               &quot;Malaysia&quot;             &quot;New Zealand&quot;          &quot;Poland&quot;              [21] &quot;Russia&quot;               &quot;Singapore&quot;            &quot;Sweden&quot;               &quot;Thailand&quot;             &quot;Taiwan&quot;              [26] &quot;US&quot;                   &quot;South Africa&quot;         &quot;Philippines&quot;          &quot;Norway&quot;               &quot;Peru&quot;                [31] &quot;Turkey&quot;               &quot;Egypt&quot;                &quot;Colombia&quot;             &quot;Costa Rica&quot;           &quot;Sri Lanka&quot;           [36] &quot;Pakistan&quot;             &quot;Saudi Arabia&quot;         &quot;Ukraine&quot;              &quot;Uruguay&quot;              &quot;United Arab Emirates&quot;[41] &quot;India&quot;                &quot;Vietnam&quot;              &quot;Azerbaijan&quot;           &quot;Bahrain&quot;              &quot;Guatemala&quot;           [46] &quot;Honduras&quot;             &quot;Croatia&quot;              &quot;Jordan&quot;               &quot;Kuwait&quot;               &quot;Lebanon&quot;             [51] &quot;Moldova&quot;              &quot;Nicaragua&quot;            &quot;Oman&quot;                 &quot;Qatar&quot;                &quot;Romania&quot;             \n不過這時會有一個warning訊息，這是因為在大麥克資料集裡將歐元區國家視為一個區域，而相對應的iso_a3碼為EUZ，這會在轉換的時候產生NA值，因此大家要記得手動調整過來。\n&gt; countrycode(data$iso_a3, origin = &quot;iso3c&quot;, destination = &quot;cldr.name.zh_hant&quot;) %&gt;% unique() [1] &quot;阿根廷&quot;             &quot;澳洲&quot;               &quot;巴西&quot;               &quot;加拿大&quot;             &quot;瑞士&quot;               &quot;智利&quot;               [7] &quot;中國&quot;               &quot;捷克&quot;               &quot;丹麥&quot;               &quot;英國&quot;               &quot;中國香港特別行政區&quot; &quot;匈牙利&quot;            [13] &quot;印尼&quot;               &quot;以色列&quot;             &quot;日本&quot;               &quot;南韓&quot;               &quot;墨西哥&quot;             &quot;馬來西亞&quot;          [19] &quot;紐西蘭&quot;             &quot;波蘭&quot;               &quot;俄羅斯&quot;             &quot;新加坡&quot;             &quot;瑞典&quot;               &quot;泰國&quot;              [25] &quot;台灣&quot;               &quot;美國&quot;               &quot;南非&quot;               &quot;菲律賓&quot;             &quot;挪威&quot;               &quot;秘魯&quot;              [31] &quot;土耳其&quot;             &quot;埃及&quot;               &quot;哥倫比亞&quot;           &quot;哥斯大黎加&quot;         &quot;斯里蘭卡&quot;           &quot;巴基斯坦&quot;          [37] &quot;沙烏地阿拉伯&quot;       &quot;烏克蘭&quot;             &quot;烏拉圭&quot;             &quot;阿拉伯聯合大公國&quot;   &quot;印度&quot;               &quot;越南&quot;              [43] &quot;亞塞拜然&quot;           &quot;巴林&quot;               &quot;瓜地馬拉&quot;           &quot;宏都拉斯&quot;           &quot;克羅埃西亞&quot;         &quot;約旦&quot;              [49] &quot;科威特&quot;             &quot;黎巴嫩&quot;             &quot;摩爾多瓦&quot;           &quot;尼加拉瓜&quot;           &quot;阿曼&quot;               &quot;卡達&quot;              [55] &quot;羅馬尼亞&quot;                 \n要是你喜歡的話，也可將國家名稱轉成中文或是其他語言，可以使用countrycode::cldr_examples看所有轉換選項。\n洲別名稱這個資料總共涵蓋了55個國家，以及歐元區，共計56個國家/地區。根據麥當勞在維基百科的頁面，麥當勞在全球118個國家都有店面，很顯然這個資料集並沒有涵蓋所有國家，至於原因就不得而知了。\n為了待會在視覺化的時候方便一點，我一樣使用了countrycode這個套件新增了一個欄位：continent，一樣是使用跟之前一樣的function。\n&gt; countrycode(data$iso_a3, origin = &quot;iso3c&quot;, destination = &quot;continent&quot;) %&gt;% unique()[1] &quot;Americas&quot; &quot;Oceania&quot;  &quot;Europe&quot;   &quot;Asia&quot;     &quot;Africa&quot;  \n年份問題我原先以為這個調查是每年一次的，實際做視覺化的時候才看到從2012年起在許多國家是一年會進行調查兩次的。此外，大概有將近15個國家的資料是不完整的，一直到2018年開始才有資料。\n\n因此我在這邊做了兩個處理\n\n移除麥當勞歷史不到8年的國家，共計14個\n時間以年為頻率，若一年有兩筆資料，則直接取平均\n\n被移除的國家名字和沒有資料的年份數量如下：\n&gt; missing_country# A tibble: 14 x 2   country    missing   &lt;chr&gt;        &lt;int&gt; 1 Azerbaijan      18 2 Bahrain         18 3 Croatia         18 4 Guatemala       18 5 Honduras        18 6 Jordan          18 7 Kuwait          18 8 Lebanon         18 9 Moldova         1810 Nicaragua       1811 Oman            1812 Qatar           1813 Romania         1814 Vietnam         14\n資料遺失剛剛載入資料後，我們用了skim這個function發現到gdp欄位有不少的空值，大約55％的資料都是遺失的，當資料遺失的比例這麼高的時候，通常都要很小心，看看是不是哪個過程出了問題，才導致有這麼多的資料都不見了。naniar::vis_miss()也是在做資料清理時的好用工具， 可以讓你一目瞭然整個資料集所有欄位的缺失狀況。\n\n看來主要的問題都是GDP這個欄位。\n\n\n從以上兩張圖來看，可以得知遺失值和國家沒有太大的關係。主要問題是在2010年前：所有國家的人均國內生產毛額都是空值。\n遺失資料的處理方式有很多種，常見的方法像是：\n\n中位數填補\n平均值填補\n眾數填補\nKNN填補\n\n或是無腦一點：\n\n刪除列\n刪除欄\n\n不過很顯然這些都不是用來處理GDP資料的好方法，最直接又簡單的方法就是找替代資料，根本的解決這個問題。我從世界銀行的開放資料（World Bank Open Data）網站中，使用了GDP per capita (current US$)這個資料集。\n需要注意的是這個貨幣單位是以現在的美金匯率計算了，所以會和原始資料中的gdp_dollar數值不一樣，為了資料的一致性，因此我們就以世界銀行的資料為主。\n\n這樣雖然將GDP欄位缺值的比例降低了（從54.88％至26.71％），但仔細看會發現有些原始資料有的值，在World Bank的資料卻沒有值。一個可行的做法就是找到當時資料紀錄的日期和相對應的匯率，再做相對應的轉換，不過這樣實在太麻煩了，而且也不一定有資料。\n\n幸好從我們這個圖表中可以看到，兩個GDP的資料是有線性關係的，因此我們可以做個Linear Regression模型，用gdp_dollar和year來預測gdp，雖然不能100％準確，但是至少是個可行的做法。\n&gt; summary(model)Call:lm(formula = gdp ~ gdp_dollar + year, data = temp)Residuals:     Min       1Q   Median       3Q      Max-27810.0  -1458.6   -217.4   1376.1  17075.2Coefficients:              Estimate Std. Error t value Pr(&gt;|t|)    (Intercept)  8.037e+05  1.974e+05   4.071 6.30e-05 ***gdp_dollar   1.028e+00  1.034e-02  99.350  &lt; 2e-16 ***year        -3.985e+02  9.798e+01  -4.067 6.39e-05 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 4016 on 249 degrees of freedom  (45 observations deleted due to missingness)Multiple R-squared:  0.9754,\tAdjusted R-squared:  0.9752F-statistic:  4939 on 2 and 249 DF,  p-value: &lt; 2.2e-16\n我們的模型表現似乎不錯：\n\nR Squared：0.9752\nMAE：23820.78\nMAPE：2.233\n\n透過這個模型來補值之後，gdp欄位最後的缺失比例為12.317％。\n土耳其里拉\n在做初步的分析的時候，我畫了上面這張圖：亞洲各國大麥克價格（當地貨幣）在這20年間的變化，原本只是想看看各國大麥克價錢變化的趨勢是不是大致相同的，結果偶然發現了一個問題。\n我第一眼看到圖的時候，還很訝異土耳其的大麥克價格怎麼暴跌的這麼嚴重，把資料調出來看之後才發現原來是因為土耳其進行貨幣改革的原因。因原先第一代的土耳其里拉面值太大，造成使用不便、貨幣貶值等因素，遂進行貨幣改革。2005 年 1 月 1 日起，開始啟用新土耳其里拉（ Yeni Türk Lirası），以1,000,000 舊土耳其里拉兌換 1 新土耳其里拉。\n\n上圖左是原始資料，而右方則是將舊土耳其里拉以1,000,000：1轉換成新土耳其里拉後的圖，看起來就正常多了。這就是探索式資料分析（Exploratory Data Analysis）的意義所在，如果沒有針對資料先進行探勘，就冒然建模或是妄下結論可能會導致錯誤的決策或後果。\n 經過上面幾個步驟後，最後的資料呈現如下： \n\n\ncontinent\ncountry\nyear\ndollar_price\nlocal_price\ngdp\n\n\n\nAmericas\nArgentina\n2000\n2.500000\n2.50\n7708.101\n\n\nAmericas\nArgentina\n2001\n2.500000\n2.50\n7208.372\n\n\nAmericas\nArgentina\n2002\n0.798722\n2.50\n2593.404\n\n\nAmericas\nArgentina\n2003\n1.423611\n4.10\n3349.806\n\n\nAmericas\nArgentina\n2004\n1.477966\n4.36\n4277.721\n\n\n\n資料的架構呈現：\n&gt; str(data)&#x27;data.frame&#x27;:\t820 obs. of  6 variables: $ continent   : chr  &quot;Americas&quot; &quot;Americas&quot; &quot;Americas&quot; &quot;Americas&quot; ... $ country     : chr  &quot;Argentina&quot; &quot;Argentina&quot; &quot;Argentina&quot; &quot;Argentina&quot; ... $ year        : num  2000 2001 2002 2003 2004 ... $ dollar_price: num  2.5 2.5 0.799 1.424 1.478 ... $ local_price : num  2.5 2.5 2.5 4.1 4.36 ... $ gdp         : num  7708 7208 2593 3350 4278 ...\n初步分析這是個和時間有相關的資料集，所以我們不妨就先從折線圖開始，看看大麥克價格在全球各地20年間的變化。\n當地貨幣價格原始數值由於各國幣值不同，因此Y軸的範圍也不一致，因此沒辦法畫在同一張圖上，清楚的看出國家間的差異，因此只能依照地區分別畫在不同張圖上。在大部分國家，大麥克的當地售價在過去20年來都是呈現線性成長的，不過還是有幾個例外，下面我們就針對比較特別的國家，單獨提出來討論。\n\n像是在台灣，大麥克價格原先也是穩定上升，在2015年達到高點後卻大幅下跌，跌幅高達12.6％。如果大家還有印象的話，應該會記得這是因為麥當勞在2015年時更換了菜單，將原本套餐的制度改為自由配，造成大部分商品單點價格變低。\n沙烏地阿拉伯則是亞洲地區單年度漲幅最高的國家，在2004年時大麥克只要2.4沙烏地里亞爾（約18元新台幣），但在2005年時卻增長快3倍，來到9沙烏地里亞爾（約67.05元新台幣），隨後逐年穩定增長。\n而韓國、日本和印尼三國則有個共通的地方：價格都在2005年來到最低點，之後就逐年攀升。\n\n歐洲和其他地區相比，算是價格漲褔相對穩定的區域，並沒有物價飛漲的狀況。瑞士則可以說是全球大麥克售價最穩定的國家，價格在2001年後幾乎沒有太大的變化。\n\n美洲則可以分為兩部分來看，在巴西、加拿大、智利、墨西哥、烏拉圭和美國這幾個國家，物價成長趨勢相對該地區其他國家相對穩定。另一方面，大麥克在阿根廷的售價可以說是呈現指數型的增長，在2020年時一個大麥克要價210阿根廷披索，在20年前這足以買到84個漢堡。而哥斯大黎加在08年時也有物價飛漲的情形出現，大麥克價格一年上漲了將近60％。哥倫比亞則是在2015年後突然快速上升，從8000（哥倫比亞）披索漲到12000披索。\n在非洲的57個國家之中，麥當勞只有在埃及、摩洛哥、南非和突尼西亞有門市而已，不過我們的原始資料集中只有南非和埃及的資料而已。在2015年後可以看到埃及的大麥克售價漲幅明顯較南非高了許多。\n\n紐澳兩國的大麥克售價也是穩定上升。\n成長率上面比較的是各國在過去20年間，大麥克價格的變化，但是由於幣值問題，我們沒辦法比較不同國家間的情形。因此這邊我們從另一個面向來看，以各國開始有麥當勞的第一年當作基期，並將逐年價格除以基期的價格，就可以得知該年份的價格是基期時的多少倍了。\n由於阿根廷的通貨膨脹是在太嚴重了，如果將其也納入圖表的話，會使得Y軸的範圍變得很大，壓縮其他數值的範圍。因此這裡先把阿根廷和其他幾個通貨膨漲較嚴重的國家拿出來，特別畫一張圖討論。\n上圖中天藍色呈指數型成長的線就是阿根廷大麥克價格的成長趨勢，20年的時間，原本2.5阿根廷披索的漢堡已經變成210.5阿根廷披索。單年度最高上漲幅度超過50％，簡直是令人難以想像。烏克蘭、巴西、烏拉圭這三個國家，雖然通貨膨漲的情形也是相當嚴重，但是和阿根廷放在一起比較，根本是小巫見大巫。\n為了畫面的美觀和整潔，我們還是依照地區劃分資料，不過由於大洋洲資料過少，所以會和非洲合併在一起，接下來的圖也會依照這個邏輯。\n左上角的埃及和我們剛剛看到的圖表一樣，在2015年後價格迅速飆漲，短短五年之內從基期的兩倍價格漲到將近5倍。相較之下，南非的價格成長就相對平穩，不過這四個國家當中，紐西蘭還是物價最穩定得國家，過去20年，大麥克價個上漲大約一倍而已。\n美洲地區突破天際的那根線就是剛剛看到的阿根廷，在不到10年的時間內，阿根廷大麥克售價就已經是基期的8倍了。同時巴西和烏拉圭的通貨膨脹在這裡能看得更清楚，至於其他美洲國家的物價上漲情形則沒有這麼嚴重。\n亞洲地區除了沙烏地阿拉伯在15年有奇怪的飛躍之外，其他時間成長也算平穩。而斯里蘭卡則是在05年開始上漲幅度逐年升高\n烏克蘭是物價波動較平緩的歐洲地區，唯一一個通貨膨漲嚴重的國家，不過俄羅斯和匈牙利的上漲速度也不慢就是了。\n\n透過幾何平均數的公式，我們可以計算出各國每年大麥克的平均上漲幅度。而理所當然的第一名就是阿根廷，每年漲幅26.3％，簡直是令人無法想像的可怕，相較之下台灣大麥克的上漲幅度是全球最低的，不過這是因為菜單重新設計的緣故，然而即使是以2015年的高點（79元）來看，每年上漲幅度不過0.867％，仍是全球倒數的。總體來看，全球大麥克平均每年上漲5.11％，如果在2000年初一個大麥克賣100元，到了2020年底就會變成大約257元。\n美金價格看完了以各國貨幣計價的大麥克價格後，我們再來看看依當時匯率換算之後的美金價格吧！透過美金計價的方式，我們更能比較國家間大麥克價格的高低，不過別忘了這會受到匯率的影響，因此沒辦法斷定說因為A國家的大麥克美金價格比B國家高，就代表A國家的大麥克一定比較貴喔。\n\n首先從左上角的非洲和大洋洲看起，理所當然的紐澳兩國的大麥克售價比起埃及和南非高出不少，不過我們可以發現大洋洲地區的大麥克美金售價漲幅較為明顯，而非洲地區則是呈現相對緩慢的增長。\n在美洲地區則是美國的大麥克售價最高，緊接著是加拿大。巴西的大麥克美金價格波動則相對明顯，我想這是因為受到巴西貨幣對美金匯率波動所受到的影響。墨西哥則是全美洲大麥克價格最低的國家。\n以色列是亞洲大麥克售價最高的國家，要價將近5美金，大約是台灣的大麥克兩倍的售價，同時我們也可以發現台灣的價格是亞洲第4便宜的，只比印尼還有馬來西亞貴零點幾美金。\n歐洲則是大麥克價格分佈最廣泛的地區，北歐國家如瑞士、挪威和瑞典的大麥克售價是全球最高的幾個國家，而所有歐元區國家的大麥克售價則是4.6美金。至於發展較差的東歐地區，大麥克售價則相對親民，甚至比起許多亞洲國家還低。\n進階分析剛剛前面的章節我們都在著重在大麥克價格的變化，不管是當地貨幣價格或美金價格。然而這個資料集其實還包含了其他資訊，也就是人均GDP。一般來說人均GDP較高的國家通常是經濟發展比較好的地區，而相對應的物價也會比較高。換句話說，我們應該會發現人均GDP和大麥克的美金價格有著正相關，一起來看看是不是這樣吧！\n人均GDP由於資料完整度的原因，所以有些國家的資料較少，所以迴歸線的長度會較短。雖然可以將每條線調整成一樣長度，但這樣畫面會過於混亂，因此我們就維持原樣。\n\n的確人均GDP和大麥克的美金價格有正相關，不過每條線的斜率明顯不一樣，而這個分界似乎在人均GD兩萬美元左右。圖片中靠右邊的國家，也就是經濟發展較好的國家，在人均GDP上升時，物價成長也較為平穩，而左方的新興經濟體，像是南非、巴西、泰國、馬來西亞等國家，物價上漲的速度似乎比已開發國家來的快。\n唯一的例外是日本，雖然人均GDP在40000元左右，但是物價上漲速度明顯比澳洲、加拿大快。另外圖中有一條線的斜率是負的，而這個國家正就是我們一直提到的台灣，看來調降價格這件事真的相當罕見啊～\n人均薪資雖然大家都知道人均GDP所代表的涵意，但是總計經濟指標畢竟對大家來說比較無感，因此這邊我從維基百科上找到了世界各國的基本工資資料，我做了一些簡單的處理後，最後得到的資料如下：\n\n\n\ncountry\nwork_hours\nhourly_wage\n\n\n\nAfghanistan\n40\n0.42\n\n\nAlbania\n40\n1.26\n\n\nAlgeria\n40\n0.97\n\n\nAndorra\n40\n6.72\n\n\nAngola\n44\n0.33\n\n\n\n\n\n我用各國2020年的大麥克美金價格除以各國法定基本時薪，換算出各國人民需要工作幾個小時才能吃到一個大麥克漢堡。\n\n全球平均工作2.03小時就可以吃到大麥克了，不過中位數卻只有1.4小時，明顯是因為極端值的影響，很這幾個國家剛好都在南亞地區。很意外的斯里蘭卡的人需要工作高達將近12小時才能吃到一個大麥克，這主要是因為該國基本時薪只有0.29美元，而緊追在後的印度也好不到哪裡去，時薪0.28，不過由於印度的大麥克價錢只要斯里蘭卡的3/4，所以印度人少工作3小時就可以吃一個漢堡了。而紐澳兩國則只需要工作不到20分鐘就可以買一個大麥克了，在東亞地區的開發國家的我們則是25~30分鐘。\n\n基本時薪和大麥克的價格也是有正相關的，透過一個二次函數曲線，我們可以得到上面的趨勢。大致上來說，基本時薪越高的國家，大麥克售價也會比較高，不過還是會有一些例外。像是韓國就是時薪高但大麥克價格較低的國家，韓國、以色列、美國三國的基本時薪差不多，但是以色列的大麥克售價比韓國高30％，美國則是比韓國高出50％。\n對南美洲國家來說，大麥克就沒那麼便宜了。像是哥斯大黎加的大麥克和南韓、紐西蘭、英國差不多價錢，但是基本時薪卻是別人的1/4甚至1/5，同樣的情形也發生在巴西和烏拉圭身上，看來下次有去這些國家的話，要少吃麥當勞啊，因為實在太不划算了。至於在台灣的我們呢？就盡量放心吃吧～～\n結語終於結束了！看了那麼久大麥克，還不趕快去麥當勞買個套餐吃！歡迎大家提供不一樣的意見，讓這篇文章變得更好。如果喜歡我的文章，也別忘記在下面點個讚喔。\n","tags":["data analysis","economy","tidytuesday","r","ggplot","dplyr","tidyr"]}]